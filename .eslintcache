[{"/Users/austinburgard/Dev/baking/src/index.js":"1","/Users/austinburgard/Dev/baking/src/App.js":"2","/Users/austinburgard/Dev/baking/src/reportWebVitals.js":"3","/Users/austinburgard/Dev/baking/src/components/theme.js":"4","/Users/austinburgard/Dev/baking/src/components/Appbar.js":"5","/Users/austinburgard/Dev/baking/src/Main.js":"6","/Users/austinburgard/Dev/baking/src/Contact.js":"7","/Users/austinburgard/Dev/baking/src/About.js":"8","/Users/austinburgard/Dev/baking/src/components/BreakerTitle.js":"9"},{"size":589,"mtime":1607697605397,"results":"10","hashOfConfig":"11"},{"size":474,"mtime":1608560136656,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607689861815,"results":"13","hashOfConfig":"11"},{"size":382,"mtime":1608558902730,"results":"14","hashOfConfig":"11"},{"size":5031,"mtime":1608560906568,"results":"15","hashOfConfig":"11"},{"size":1161,"mtime":1608561183875,"results":"16","hashOfConfig":"11"},{"size":3614,"mtime":1608563286751,"results":"17","hashOfConfig":"11"},{"size":2018,"mtime":1608560418197,"results":"18","hashOfConfig":"11"},{"size":889,"mtime":1608560378442,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"j092m6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/austinburgard/Dev/baking/src/index.js",[],["41","42"],"/Users/austinburgard/Dev/baking/src/App.js",["43","44"],"import theme from \"./components/theme\";\n\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Navigation from \"./components/Appbar\";\nimport MainLanding from \"./Main\";\nimport Contact from \"./Contact\";\nimport About from \"./About\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Navigation />\n      <MainLanding />\n      <About />\n      <Contact />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","/Users/austinburgard/Dev/baking/src/reportWebVitals.js",[],"/Users/austinburgard/Dev/baking/src/components/theme.js",[],"/Users/austinburgard/Dev/baking/src/components/Appbar.js",[],"/Users/austinburgard/Dev/baking/src/Main.js",[],"/Users/austinburgard/Dev/baking/src/Contact.js",["45"],"// Dependencies\nimport React, { useState } from \"react\";\nimport emailjs from \"emailjs-com\";\n\n// MUI\nimport { Input, Container } from \"@material-ui/core\";\n\n// My Components\nimport Breaker from \"./components/BreakerTitle\";\n\nexport default function Contact() {\n  const [contact, setContact] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    email: \"\",\n    phone: \"\",\n    address_1: \"\",\n    address_2: \"\",\n    zip: \"\",\n    comments: \"\",\n  });\n\n  function sendEmail(e) {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        process.env.REACT_APP_EMAIL_SERVICE_ID,\n        process.env.REACT_APP_EMAIL_TEMPLATE_ID,\n        e.target,\n        process.env.REACT_APP_EMAIL_USER_ID\n      )\n      .then(\n        (result) => {\n          console.log(result.text);\n          setContact({\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            phone: \"\",\n            address_1: \"\",\n            address_2: \"\",\n            zip: \"\",\n            comments: \"\",\n          });\n        },\n        (error) => {\n          console.log(error.text);\n        }\n      );\n  }\n\n  console.log(process.env.REACT_APP_EMAIL_USER_ID);\n  console.log(process.env.REACT_APP_EMAIL_SERVICE_ID);\n  console.log(process.env.REACT_APP_EMAIL_TEMPLATE_ID);\n\n  return (\n    <Container>\n      <Breaker title={\"Contact\"} />\n      <form className=\"contact-us\" onSubmit={sendEmail}>\n        <label htmlFor=\"first\">First Name</label>\n        <input\n          type=\"text\"\n          value={contact.first_name}\n          id=\"first\"\n          name=\"firstName\"\n          onChange={(e) =>\n            setContact({ ...contact, first_name: e.target.value })\n          }\n        />\n        <label htmlFor=\"last\">Last Name</label>\n        <input\n          type=\"text\"\n          value={contact.last_name}\n          id=\"last\"\n          name=\"lastName\"\n          onChange={(e) =>\n            setContact({ ...contact, last_name: e.target.value })\n          }\n        />\n        <label htmlFor=\"phone\">Phone</label>\n        <input\n          type=\"text\"\n          value={contact.phone}\n          id=\"phone\"\n          name=\"phone\"\n          onChange={(e) => setContact({ ...contact, phone: e.target.value })}\n        />\n        <label htmlFor=\"email\">Email</label>\n        <input\n          type=\"email\"\n          value={contact.email}\n          id=\"email\"\n          name=\"email\"\n          onChange={(e) => setContact({ ...contact, email: e.target.value })}\n        />\n        <label htmlFor=\"address1\">Address 1</label>\n        <input\n          type=\"text\"\n          value={contact.address_1}\n          id=\"address1\"\n          name=\"address1\"\n          onChange={(e) =>\n            setContact({ ...contact, address_1: e.target.value })\n          }\n        />\n        <label htmlFor=\"address2\">Address 2</label>\n        <input\n          type=\"text\"\n          value={contact.address_2}\n          id=\"address2\"\n          name=\"address2\"\n          onChange={(e) =>\n            setContact({ ...contact, address_2: e.target.value })\n          }\n        />\n        <label htmlFor=\"zip\">Zip</label>\n        <input\n          type=\"text\"\n          value={contact.zip}\n          id=\"zip\"\n          name=\"zip\"\n          onChange={(e) => setContact({ ...contact, zip: e.target.value })}\n        />\n        <label htmlFor=\"comments\">Comments</label>\n        <textarea\n          type=\"text\"\n          value={contact.comments}\n          id=\"comments\"\n          name=\"comments\"\n          onChange={(e) => setContact({ ...contact, comments: e.target.value })}\n        />\n        <button type=\"submit\">Submit</button>\n      </form>\n    </Container>\n  );\n}\n","/Users/austinburgard/Dev/baking/src/About.js",[],"/Users/austinburgard/Dev/baking/src/components/BreakerTitle.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":15},{"ruleId":"50","severity":1,"message":"54","line":4,"column":17,"nodeType":"52","messageId":"53","endLine":4,"endColumn":23},{"ruleId":"50","severity":1,"message":"55","line":6,"column":10,"nodeType":"52","messageId":"53","endLine":6,"endColumn":15},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation"]